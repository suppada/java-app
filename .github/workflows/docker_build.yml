name: Docker Build and Push
on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      registry:
        required: true
        type: string
        default: "ghcr.io"
      artifact_extension:
        required: false
        type: string
        default: ".war"
      artifact_filename:
        required: false
        type: string
        default: "artifact"

jobs:
  docker_build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh jq -y
      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
      - name: Download Maven Artifact from GitHub Release
        run: |
          DOWNLOAD_URL=$(gh api repos/${{ github.repository }}/releases/latest | jq -r '.assets[] | select(.name | endswith(\"${{ inputs.artifact_extension }}\")) | .browser_download_url')
          if [ -z "$DOWNLOAD_URL" ]; then
            echo "No artifact with extension ${{ inputs.artifact_extension }} found in latest release!"
            exit 1
          fi
          echo "Downloading WAR file from: $DOWNLOAD_URL"
          curl -L -o "${{ inputs.artifact_filename }}${{ inputs.artifact_extension }}" $DOWNLOAD_URL
      - name: Verify WAR file exists
        run: ls -l "${{ inputs.artifact_filename }}${{ inputs.artifact_extension }}"
      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ inputs.registry }}/${{ inputs.image_name }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
