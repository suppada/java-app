name: CI/CD
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ develop ]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CHART_NAME: java-chart
  CHART_VERSION: 1.0.0

jobs:
  maven_build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Build project with Maven
        run: mvn -B package --file pom.xml
  
  publish-artifacts:
    runs-on: ubuntu-latest
    needs: [maven_build_and_test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - run: mvn -B package --file pom.xml
      - run: mkdir dev && cp -r target* dev
      - uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: dev

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [publish-artifacts]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
#   helm_package_and_push:
#     runs-on: ubuntu-latest
#     needs: [build-and-push-image]
#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Helm
#         uses: azure/setup-helm@v3
#         with:
#           version: v3.12.0

#       - name: Log in to GitHub Container Registry (for Helm)
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

#       - name: Package Helm Chart
#         run: |
#           helm package charts/${{ env.CHART_NAME }} --version ${{ env.CHART_VERSION }}
#           ls -l *.tgz

#       - name: Push Helm Chart to OCI Registry
#         run: |
#           helm push ${{ env.CHART_NAME }}-${{ env.CHART_VERSION }}.tgz oci://${{ env.REGISTRY }}/${{ github.repository }}/java-chart

#       - name: Logout from Helm Registry
#         run: helm registry logout ${{ env.REGISTRY }}